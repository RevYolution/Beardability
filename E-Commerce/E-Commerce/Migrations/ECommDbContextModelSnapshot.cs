// <auto-generated />
using System;
using E_Commerce.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace E_Commerce.Migrations
{
    [DbContext(typeof(ECommDbContext))]
    partial class ECommDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("E_Commerce.Models.Basket", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email");

                    b.HasKey("ID");

                    b.ToTable("Baskets");
                });

            modelBuilder.Entity("E_Commerce.Models.BasketItem", b =>
                {
                    b.Property<int>("BasketID");

                    b.Property<int>("ProductID");

                    b.Property<string>("Image");

                    b.Property<string>("Name");

                    b.Property<decimal>("Price");

                    b.Property<int>("Quanity");

                    b.Property<string>("Sku");

                    b.HasKey("BasketID", "ProductID");

                    b.HasIndex("ProductID");

                    b.ToTable("BasketItems");
                });

            modelBuilder.Entity("E_Commerce.Models.Order", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CustomerName");

                    b.Property<DateTime>("Date");

                    b.Property<string>("ShipppingAddress");

                    b.Property<int>("TotalPrice");

                    b.HasKey("ID");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("E_Commerce.Models.OrderItem", b =>
                {
                    b.Property<int>("ProductID");

                    b.Property<int>("OrderID");

                    b.Property<int>("ID");

                    b.Property<int>("Quanity");

                    b.Property<int>("TotalItemPrice");

                    b.HasKey("ProductID", "OrderID");

                    b.HasIndex("OrderID");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("E_Commerce.Models.Product", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<string>("Image");

                    b.Property<string>("Name");

                    b.Property<decimal>("Price");

                    b.Property<string>("Sku");

                    b.HasKey("ID");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Description = "Stick on full beard. Glue not included",
                            Image = "http://placebeard.it/g/100/125",
                            Name = "The Baron",
                            Price = 10.00m,
                            Sku = "Bear001"
                        },
                        new
                        {
                            ID = 3,
                            Description = "Stick on soul patch. Glue not included",
                            Image = "http://placebeard.it/g/100/125",
                            Name = "Soul Patch",
                            Price = 2.00m,
                            Sku = "003Soul"
                        },
                        new
                        {
                            ID = 4,
                            Description = "Full beard with hooks to hang off of ears.",
                            Image = "http://placebeard.it/g/100/125",
                            Name = "Old School Hook Beard",
                            Price = 10.00m,
                            Sku = "004Hook"
                        },
                        new
                        {
                            ID = 5,
                            Description = "Long Fu-Man-Chu stick on mustache. Glue not included.",
                            Image = "http://placebeard.it/g/100/125",
                            Name = "Long Fu-Man-Chu Mustache",
                            Price = 8.00m,
                            Sku = "005Fu"
                        },
                        new
                        {
                            ID = 6,
                            Description = "Short Fu-Man-Chu stick on mustache. Glue not included",
                            Image = "http://placebeard.it/g/100/125",
                            Name = "Short Fu-Man-Chu Mustache",
                            Price = 5.00m,
                            Sku = "006FuS"
                        },
                        new
                        {
                            ID = 7,
                            Description = "Spray that allows for realistic looking 5'oclock shadow. Alcohol soluble.",
                            Image = "http://placebeard.it/g/100/125",
                            Name = "5'oclock Shadow Spray",
                            Price = 15.00m,
                            Sku = "007Shadow"
                        },
                        new
                        {
                            ID = 8,
                            Description = "Glue for all stick on facial hair. Alcohol soluble.",
                            Image = "http://placebeard.it/g/100/125",
                            Name = "Facial Glue",
                            Price = 5.00m,
                            Sku = "008Glue"
                        },
                        new
                        {
                            ID = 9,
                            Description = "Specially designed comb for facial hair.",
                            Image = "http://placebeard.it/g/100/125",
                            Name = "Facial Hair Comb",
                            Price = 5.00m,
                            Sku = "009Comb"
                        },
                        new
                        {
                            ID = 10,
                            Description = "Stick on mutton chops. Glue not included",
                            Image = "http://placebeard.it/g/100/125",
                            Name = "Mutton Chops",
                            Price = 7.00m,
                            Sku = "010Chops"
                        });
                });

            modelBuilder.Entity("E_Commerce.Models.BasketItem", b =>
                {
                    b.HasOne("E_Commerce.Models.Basket", "Basket")
                        .WithMany("BasketItems")
                        .HasForeignKey("BasketID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("E_Commerce.Models.Product", "Product")
                        .WithMany("BasketItem")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("E_Commerce.Models.OrderItem", b =>
                {
                    b.HasOne("E_Commerce.Models.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("E_Commerce.Models.Product", "Product")
                        .WithMany("OrderItem")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
